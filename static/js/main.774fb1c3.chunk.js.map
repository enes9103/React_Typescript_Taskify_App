{"version":3,"sources":["components/InputFeild.tsx","components/SingleTodo.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["InputFeild","todo","setTodo","handleAdd","inputRef","useRef","className","onSubmit","e","current","blur","type","placeholder","value","ref","onChange","target","SingleTodo","todos","setTodos","useState","edit","setEdit","editTodo","setEditTodo","useEffect","focus","id","preventDefault","map","handleEdit","isDone","onClick","filter","TodoList","App","Date","now","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.774fb1c3.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\nimport \"./styles.css\";\n\ninterface props {\n  todo: string;\n  setTodo: React.Dispatch<React.SetStateAction<string>>;\n  handleAdd: (e: React.FormEvent) => void;\n}\n\nconst InputFeild: React.FC<props> = ({ todo, setTodo, handleAdd }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  return (\n    <form\n      className=\"input\"\n      onSubmit={(e) => {\n        handleAdd(e);\n        inputRef.current?.blur();\n      }}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"Enter a Todo\"\n        value={todo}\n        ref={inputRef}\n        onChange={(e) => setTodo(e.target.value)}\n        className=\"input__box\"\n      />\n      <button type=\"submit\" className=\"input_submit\">\n        GO\n      </button>\n    </form>\n  );\n};\n\nexport default InputFeild;\n","import React, { useEffect, useState } from \"react\";\nimport { useRef } from \"react\";\nimport { AiFillEdit, AiFillDelete } from \"react-icons/ai\";\nimport { MdDone } from \"react-icons/md\";\nimport { Todo } from \"../models/models\";\n\nconst SingleTodo: React.FC<{\n  todo: Todo;\n  todos: Todo[];\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n}> = ({ todo, todos, setTodos }) => {\n  const [edit, setEdit] = useState<boolean>(false);\n  const [editTodo, setEditTodo] = useState<string>(todo.todo);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  useEffect(() => {\n    inputRef.current?.focus();\n  }, [edit]);\n\n  // EDÄ°T TODO\n  const handleEdit = (e: React.FormEvent, id: number) => {\n    e.preventDefault();\n    setTodos(\n      todos.map((todo) => (todo.id === id ? { ...todo, todo: editTodo } : todo))\n    );\n    setEdit(false);\n  };\n\n  // DELETE TODO\n  const handleDelete = (id: number) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  // DONE TODO\n  const handleDone = (id: number) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, isDone: !todo.isDone } : todo\n      )\n    );\n  };\n\n  return (\n    <form className=\"todos__single\" onSubmit={(e) => handleEdit(e, todo.id)}>\n      {edit ? (\n        <input\n          value={editTodo}\n          onChange={(e) => setEditTodo(e.target.value)}\n          className=\"todos__single--text\"\n          ref={inputRef}\n        />\n      ) : todo.isDone ? (\n        <s className=\"todos__single--text\">{todo.todo}</s>\n      ) : (\n        <span className=\"todos__single--text\">{todo.todo}</span>\n      )}\n      <div>\n        <span\n          className=\"icon\"\n          onClick={() => {\n            if (!edit && !todo.isDone) {\n              setEdit(!edit);\n            }\n          }}\n        >\n          <AiFillEdit />\n        </span>\n        <span className=\"icon\" onClick={() => handleDelete(todo.id)}>\n          <AiFillDelete />\n        </span>\n        <span className=\"icon\" onClick={() => handleDone(todo.id)}>\n          <MdDone />\n        </span>\n      </div>\n    </form>\n  );\n};\n\nexport default SingleTodo;\n","import React from \"react\";\nimport { Todo } from \"../models/models\";\nimport SingleTodo from \"./SingleTodo\";\n\ninterface props {\n  todos: Todo[];\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n}\n\nconst TodoList: React.FC<props> = ({ todos, setTodos }) => {\n  return (\n    <div className=\"todos\">\n      {todos?.map((todo) => (\n        <SingleTodo\n          todos={todos}\n          todo={todo}\n          key={todo.id}\n          setTodos={setTodos}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport InputFeild from \"./components/InputFeild\";\nimport TodoList from \"./components/TodoList\";\nimport { Todo } from \"./models/models\";\n\nconst App: React.FC = () => {\n  const [todo, setTodo] = useState<string>(\"\");\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const handleAdd = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (todo) {\n      setTodos([...todos, { id: Date.now(), todo, isDone: false }]);\n      setTodo(\"\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <span className=\"heading\">Taskify</span>\n      <InputFeild todo={todo} setTodo={setTodo} handleAdd={handleAdd} />\n      <TodoList todos={todos} setTodos={setTodos} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}